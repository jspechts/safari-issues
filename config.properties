# The hostname or IP address to which the web server's HTTP connector will be bound
# If omitted, defaults to localhost
# 0.0.0.0 may be used to bind to all network interfaces on the runtime host
# http.host=localhost

# The port number to which the web server's HTTP connector will be bound
# If omitted, defaults to 0, which means the OS will assign an ephemeral port to be bound
# http.port=8088

# The hostname or IP address to which the web server's HTTPS connector will be bound
# If omitted, defaults to localhost
# 0.0.0.0 may be used to bind to all network interfaces on the runtime host
# https.host=localhost

# The port number to which the web server's HTTPS connector will be bound
# If omitted, defaults to 0, which means the OS will assign an ephemeral port to be bound
# https.port=8043

# Set to true to enable basic authentication to access the web server pages
# If enabled, admin / password hard-coded credentials must be used
# basic.auth=false

# Path to key store file which contains a private key entry with the certificate chain for web server SSL / TLS
# If omitted, SSL / TLS will be disabled
# keystore.path=keystore.jks

# The type of the key store (typically PKCS12 or JKS)
# keystore.type=PKCS12

# The password to the key store
# keystore.password=password

# The alias / friendly name of the private key entry
# keystore.entry.alias=selfsigned

# The password to the private key entry. If omitted, defaults to the value of keystore.password
# keystore.entry.password=password

# TLS Easy Mode - sets up the more advanced included / excluded protocols and cipher suites based on the value set
# Takes one of the following: TLSv1.2 (TLSv1.2 enabled exclusively), TLSv1.3 (TLSv1.3 enabled exclusively), or
# TLSv1.2,TLSv1.3 (both TLSv1.2 and TLSv1.3 enabled)
# If tls.easy.mode property is set, the below tls.* series of properties are ignored
# tls.easy.mode=TLSv1.3

# Comma-separated list of SSL / TLS protocols to enable
# uncomment only the first one for TLSv1.2 and TLSv1.3 support
# uncomment only the second one for exclusive TLSv1.3 support
# tls.protocols.include=TLSv1.2,TLSv1.3
# tls.protocols.include=TLSv1.3

# Comma-separated list of SSL / TLS protocols to disable
# uncomment only the first one for TLSv1.2 and TLSv1.3 support
# uncomment only the second one for exclusive TLSv1.3 support
# tls.protocols.exclude=SSLv3,SSLv2Hello,TLSv1,TLSv1.1
# tls.protocols.exclude=SSLv3,SSLv2Hello,TLSv1,TLSv1.1,TLSv1.2

# Comma-separated list of SSL / TLS cipher suites to enable
# uncomment only the first one for TLSv1.2 and TLSv1.3 support
# uncomment only the second one for exclusive TLSv1.3 support
# tls.ciphersuites.include=TLS_AES_128_GCM_SHA256,TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256,TLS_DHE_DSS_WITH_AES_128_CBC_SHA256,TLS_DHE_DSS_WITH_AES_128_GCM_SHA256,TLS_DHE_DSS_WITH_AES_256_CBC_SHA256,TLS_DHE_DSS_WITH_AES_256_GCM_SHA384,TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384
# tls.ciphersuites.include=TLS_AES_128_GCM_SHA256,TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256

# Comma-separated list of SSL / TLS cipher suites to disable
# uncomment only the first one for TLSv1.2 and TLSv1.3 support
# uncomment only the second one for exclusive TLSv1.3 support
# tls.ciphersuites.exclude=^.*_(MD5|SHA|SHA1)$,^TLS_RSA_.*$,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384,TLS_DHE_RSA_WITH_AES_256_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_EMPTY_RENEGOTIATION_INFO_SCSV
# tls.ciphersuites.exclude=^.*_(MD5|SHA|SHA1)$,^TLS_RSA_.*$,TLS_DHE_DSS_WITH_AES_128_CBC_SHA256,TLS_DHE_DSS_WITH_AES_128_GCM_SHA256,TLS_DHE_DSS_WITH_AES_256_CBC_SHA256,TLS_DHE_DSS_WITH_AES_256_GCM_SHA384,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_256_CBC_SHA256,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384,TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384,TLS_EMPTY_RENEGOTIATION_INFO_SCSV
